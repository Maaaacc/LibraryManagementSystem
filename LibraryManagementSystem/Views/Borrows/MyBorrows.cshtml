@model IEnumerable<Borrow>

<h2>My Borrowed Books</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

@{
    // Compute stats from Model dynamically (or pass via ViewData/ViewModel)
    var activeBorrows = Model.Where(b => b.ReturnedAt == null).ToList();
    var borrowHistory = Model.Where(b => b.ReturnedAt != null).ToList();

    var activeCount = activeBorrows.Count;
    var maxBorrows = (int)ViewData["MaxActiveBorrows"]; // Make sure set in controller
    var overdueCount = activeBorrows.Count(b => b.DueAt < DateTime.Now);
    var totalCount = Model.Count();
}

<div class="mb-4">
    <div class="d-flex flex-wrap gap-3">

        <div class="p-3 bg-light border rounded text-center" style="min-width: 150px;">
            <h5>Active Borrowing</h5>
            <p class="fs-4 mb-1">@activeCount / @maxBorrows</p>
            <small class="text-muted">Maximum allowed: @maxBorrows books</small>
        </div>

        <div class="p-3 bg-light border rounded text-center" style="min-width: 150px;">
            <h5>Overdue Books</h5>
            <p class="fs-4 mb-1">@overdueCount</p>
            @if (overdueCount > 0)
            {
                <small class="text-danger">Please return ASAP</small>
            }
        </div>

        <div class="p-3 bg-light border rounded text-center" style="min-width: 150px;">
            <h5>Total Borrowed</h5>
            <p class="fs-4 mb-1">@totalCount</p>
            <small class="text-muted">All time</small>
        </div>

    </div>
</div>

<ul class="nav nav-tabs" id="borrowTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="current-tab" data-bs-toggle="tab" data-bs-target="#current" type="button" role="tab" aria-controls="current" aria-selected="true">
            Current Borrowings (@activeCount)
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="history-tab" data-bs-toggle="tab" data-bs-target="#history" type="button" role="tab" aria-controls="history" aria-selected="false">
            Borrowing History (@borrowHistory.Count)
        </button>
    </li>
</ul>

<div class="tab-content mt-3" id="borrowTabsContent">
    <div class="tab-pane fade show active" id="current" role="tabpanel" aria-labelledby="current-tab">
        <h5>Current Borrowed Books</h5>
        <p>Books you currently have borrowed. Remember to return them by the due date.</p>
        @if (!activeBorrows.Any())
        {
            <p>You have no current borrowed books.</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Borrowed Date</th>
                        <th>Due Date</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var borrow in activeBorrows)
                    {
                        bool isOverdue = borrow.DueAt < DateTime.Now;
                        <tr>
                            <td>@borrow.Book.Title</td>
                            <td>@borrow.BorrowedAt.ToShortDateString()</td>
                            <td>
                                @if (isOverdue)
                                {
                                    <span class="text-danger">@borrow.DueAt.ToShortDateString() (Overdue)</span>
                                }
                                else
                                {
                                    @borrow.DueAt.ToShortDateString()
                                }
                            </td>
                            <td>
                                @if (isOverdue)
                                {
                                    <span class="badge bg-danger">Overdue</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">Borrowed</span>
                                }
                            </td>
                            <td>
                                <form asp-action="Return" method="post" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@borrow.Id" />
                                    <button type="submit" class="btn btn-warning btn-sm">Return</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <div class="tab-pane fade" id="history" role="tabpanel" aria-labelledby="history-tab">
        <h5>Borrowing History</h5>
        <p>Books you have previously borrowed and returned.</p>
        @if (!borrowHistory.Any())
        {
            <p>No borrow history found.</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Borrowed Date</th>
                        <th>Returned Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var borrow in borrowHistory)
                    {
                        <tr>
                            <td>@borrow.Book.Title</td>
                            <td>@borrow.BorrowedAt.ToShortDateString()</td>
                            <td>@borrow.ReturnedAt?.ToShortDateString()</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
}
