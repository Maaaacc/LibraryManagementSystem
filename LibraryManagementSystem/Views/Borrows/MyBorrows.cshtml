@model IEnumerable<Borrow>

<h2>My Borrowed Books</h2>
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@{
    var activeBorrows = Model.Where(b => b.ReturnedAt == null).ToList();
    var borrowHistory = Model.Where(b => b.ReturnedAt != null).ToList();
    var activeCount = activeBorrows.Count;
    var maxBorrows = (int)ViewData["MaxActiveBorrows"];
    var overdueCount = activeBorrows.Count(b => b.DueAt < DateTime.Now);
    var totalCount = Model.Count();
}
<div class="row mb-4 py-5" style="background-color: var(--color-surface);">
    <div class="col-md-4">
        <div class="card p-3 summary-card h-100">
            <div class="d-flex justify-content-between align-items-center h-100">
                <div class="flex-grow-1">
                    <h5 class="metric-label">Active Borrowing</h5>
                    <h2 class="metric-value">@activeCount / @maxBorrows</h2>
                    <p class="metric-description">Maximum allowed books</p>
                </div>
                <div class="summary-card-icon icon-books">
                    <i class="bi bi-book"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card p-3 summary-card h-100">
            <div class="d-flex justify-content-between align-items-center h-100">
                <div class="flex-grow-1">
                    <h5 class="metric-label">Overdue Books</h5>
                    <h2 class="metric-value">@overdueCount</h2>
                    @if (overdueCount > 0)
                    {
                        <p class="metric-status text-danger">Please return ASAP</p>
                    }
                    else
                    {
                        <p class="metric-description">No overdue books</p>
                    }
                </div>
                <div class="summary-card-icon icon-overdue">
                    <i class="bi bi-exclamation-triangle"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card p-3 summary-card h-100">
            <div class="d-flex justify-content-between align-items-center h-100">
                <div class="flex-grow-1">
                    <h5 class="metric-label">Total Borrowed</h5>
                    <h2 class="metric-value">@totalCount</h2>
                    <p class="metric-description">All time</p>
                </div>
                <div class="summary-card-icon icon-journal">
                    <i class="bi bi-journal-bookmark"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<ul class="nav nav-tabs mb-5 px-0" id="borrowTabs" role="tablist">
    <li class="nav-item me-2" role="presentation">
        <button class="nav-link badge-tab active d-flex align-items-center gap-2"
                id="current-tab" data-bs-toggle="tab" data-bs-target="#current"
                type="button" role="tab" aria-controls="current" aria-selected="true">
            <i class="bi bi-bookmark-check"></i> Current Borrowings (@activeCount)
        </button>
    </li>
    <li class="nav-item me-5" role="presentation">
        <button class="nav-link badge-tab d-flex align-items-center gap-2"
                id="history-tab" data-bs-toggle="tab" data-bs-target="#history"
                type="button" role="tab" aria-controls="history" aria-selected="false">
            <i class="bi bi-clock-history"></i> Borrowing History (@borrowHistory.Count)
        </button>
    </li>
</ul>


<div class="tab-content mt-3" id="borrowTabsContent">
    <div class="tab-pane fade show active" id="current" role="tabpanel" aria-labelledby="current-tab">
        <h5>Current Borrowed Books</h5>
        <p>Books you currently have borrowed. Remember to return them by the due date.</p>
        @if (!activeBorrows.Any())
        {
            <p>You have no current borrowed books.</p>
        }
        else
        {
            <table class="table table-hover ">
                <thead class="table-light">
                    <tr>
                        <th>Title</th>
                        <th>Borrowed Date</th>
                        <th>Due Date</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var borrow in activeBorrows)
                    {
                        bool isOverdue = borrow.DueAt < DateTime.Now;
                        <tr>
                            <td>@borrow.Book.Title</td>
                            <td>@borrow.BorrowedAt.ToShortDateString()</td>
                            <td>
                                @if (isOverdue)
                                {
                                    <span class="text-danger">@borrow.DueAt.ToShortDateString() (Overdue)</span>
                                }
                                else
                                {
                                    @borrow.DueAt.ToShortDateString()
                                }
                            </td>
                            <td>
                                @if (isOverdue)
                                {
                                    <span class="badge bg-danger">Overdue</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">Borrowed</span>
                                }
                            </td>
                            <td>
                                <form asp-action="Return" method="post" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@borrow.Id" />
                                    <button type="submit" class="btn btn-warning btn-sm">Return</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="tab-pane fade" id="history" role="tabpanel" aria-labelledby="history-tab">
        <h5>Borrowing History</h5>
        <p>Books you have previously borrowed and returned.</p>
        @if (!borrowHistory.Any())
        {
            <p>No borrow history found.</p>
        }
        else
        {
            <table class="table table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Title</th>
                        <th>Borrowed Date</th>
                        <th>Returned Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var borrow in borrowHistory)
                    {
                        <tr>
                            <td>@borrow.Book.Title</td>
                            <td>@borrow.BorrowedAt.ToShortDateString()</td>
                            <td>@borrow.ReturnedAt?.ToShortDateString()</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
