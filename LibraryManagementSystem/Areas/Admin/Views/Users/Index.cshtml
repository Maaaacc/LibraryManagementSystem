@using LibraryManagementSystem.Models
@model UserSearchViewModel

@{
    ViewData["Title"] = "Manage Users";
    var currentStatus = Model.Status ?? "All";

    // Allowed transitions (must match controller)
    var transitions = new Dictionary<string, string[]>
            {
                ["PendingVerification"] = new[] { "Active", "Rejected", "Banned" },
                ["Active"] = new[] { "Suspended", "Banned", "Inactive", "PendingVerification" },
                ["Suspended"] = new[] { "Active", "Inactive", "Banned" },
                ["Banned"] = Array.Empty<string>(),
                ["Rejected"] = new[] { "PendingVerification", "Banned" },
                ["Inactive"] = new[] { "Active", "PendingVerification" }
            };

    // Status counts for display
    var statusCounts = new Dictionary<string, int>
            {
                ["PendingVerification"] = Model.Users.Count(u => u.Status == "PendingVerification"),
                ["Active"] = Model.Users.Count(u => u.Status == "Active"),
                ["Suspended"] = Model.Users.Count(u => u.Status == "Suspended"),
                ["Banned"] = Model.Users.Count(u => u.Status == "Banned"),
                ["Rejected"] = Model.Users.Count(u => u.Status == "Rejected"),
                ["Inactive"] = Model.Users.Count(u => u.Status == "Inactive")
            };
}

<h2>Manage Users</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<!-- Status Tabs - Matching Borrowed Books Style -->
<ul class="nav nav-tabs mb-3 px-0" role="tablist">
    <li class="nav-item me-2" role="presentation">
        <a class="nav-link @(currentStatus == "PendingVerification" ? "active" : "")"
           asp-action="Index" asp-route-Status="PendingVerification">
            <i class="bi bi-clock-history"></i> Pending Verification (@statusCounts["PendingVerification"])
        </a>
    </li>
    <li class="nav-item me-2" role="presentation">
        <a class="nav-link @(currentStatus == "Active" ? "active" : "")"
           asp-action="Index" asp-route-Status="Active">
            <i class="bi bi-check-circle"></i> Active Users (@statusCounts["Active"])
        </a>
    </li>
    <li class="nav-item me-2" role="presentation">
        <a class="nav-link @(currentStatus == "Suspended" ? "active" : "")"
           asp-action="Index" asp-route-Status="Suspended">
            <i class="bi bi-pause-circle"></i> Suspended (@statusCounts["Suspended"])
        </a>
    </li>
    <li class="nav-item me-2" role="presentation">
        <a class="nav-link @(currentStatus == "Banned" ? "active" : "")"
           asp-action="Index" asp-route-Status="Banned">
            <i class="bi bi-x-circle"></i> Banned (@statusCounts["Banned"])
        </a>
    </li>
    <li class="nav-item me-2" role="presentation">
        <a class="nav-link @(currentStatus == "Rejected" ? "active" : "")"
           asp-action="Index" asp-route-Status="Rejected">
            <i class="bi bi-slash-circle"></i> Rejected (@statusCounts["Rejected"])
        </a>
    </li>
    <li class="nav-item me-2" role="presentation">
        <a class="nav-link @(currentStatus == "Inactive" ? "active" : "")"
           asp-action="Index" asp-route-Status="Inactive">
            <i class="bi bi-circle"></i> Inactive (@statusCounts["Inactive"])
        </a>
    </li>
</ul>

<!-- Search Section -->
<form method="get" asp-action="Index" class="mb-3 row g-2">
    <div class="col-md-4">
        <input asp-for="SearchString" class="form-control" placeholder="Search by name, email, or student ID" />
    </div>
    <div class="col-md-2">
        <input type="hidden" asp-for="Status" value="@currentStatus" />
        <button type="submit" class="btn btn-primary w-100">Search</button>
    </div>
    @if (!string.IsNullOrEmpty(Model.SearchString))
    {
        <div class="col-md-2">
            <a asp-action="Index" asp-route-Status="@currentStatus" class="btn btn-outline-secondary w-100">Clear</a>
        </div>
    }
</form>

<!-- Users Table - Matching Borrowed Books Style -->
@if (Model.Users.Any())
{
    <table class="table table-hover user-table">
        <thead class="table-light">
            <tr>
                <th>Full Name</th>
                <th>Email</th>
                <th>Student ID</th>
                <th style="width: 120px;">Status</th>
                <th style="width: 220px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                var allowedStatuses = transitions.ContainsKey(user.Status)
                ? transitions[user.Status]
                : Array.Empty<string>();

                var statusClass = user.Status.ToLower() switch
                {
                    "pendingverification" => "user-status-pending",
                    "active" => "user-status-active",
                    "suspended" => "user-status-suspended",
                    "banned" => "user-status-banned",
                    "rejected" => "user-status-rejected",
                    "inactive" => "user-status-inactive",
                    _ => "user-status-pending"
                };

                <tr>
                    <td>@user.FullName</td>
                    <td>@user.Email</td>
                    <td>@user.StudentIdNumber</td>
                    <td>
                        <span class="badge @statusClass">
                            @(user.Status == "PendingVerification" ? "Pending" : user.Status)
                        </span>
                    </td>
                    <td>
                        <div class="user-actions">
                            <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-info btn-sm btn-user-view">
                                View
                            </a>

                            @if (allowedStatuses.Any())
                            {
                                <form asp-action="Verify" method="post" style="display:inline; flex: 1;">
                                    <input type="hidden" name="id" value="@user.Id" />
                                    @Html.AntiForgeryToken()

                                    <select name="newStatus" class="form-select form-select-sm user-status-select"
                                            onchange="if(this.value && confirm('Change user status to ' + this.value + '?')) this.form.submit();">
                                        <option value="">-- Change Status --</option>
                                        @foreach (var status in allowedStatuses)
                                        {
                                            <option value="@status">
                                                @(status == "PendingVerification" ? "Pending Verification" : status)
                                            </option>
                                        }
                                    </select>
                                </form>
                            }
                            else
                            {
                                <small class="text-muted">No actions</small>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="text-center py-5">
        <i class="bi bi-people text-muted" style="font-size: 3rem;"></i>
        <h4 class="mt-3 text-muted">No Users Found</h4>
        <p class="text-muted">
            @if (!string.IsNullOrEmpty(Model.SearchString))
            {
                <span>No users match your search criteria.</span>
            }
            else
            {
                <span>No users found with @(currentStatus.ToLower()) status.</span>
            }
        </p>
        @if (!string.IsNullOrEmpty(Model.SearchString))
        {
            <a asp-action="Index" asp-route-Status="@currentStatus" class="btn btn-outline-primary">
                Clear Search
            </a>
        }
    </div>
}