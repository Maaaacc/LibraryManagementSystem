@using LibraryManagementSystem.Models
@model UserSearchViewModel

@{
    ViewData["Title"] = "Manage Users";
    var currentStatus = Model.Status ?? "All";

    // Allowed transitions (must match controller)
    var transitions = new Dictionary<string, string[]>
            {
                ["PendingVerification"] = new[] { "Active", "Rejected", "Banned" },
                ["Active"] = new[] { "Suspended", "Banned", "Inactive", "PendingVerification" },
                ["Suspended"] = new[] { "Active", "Inactive", "Banned" },
                ["Banned"] = Array.Empty<string>(),
                ["Rejected"] = new[] { "PendingVerification", "Banned" },
                ["Inactive"] = new[] { "Active", "PendingVerification" }
            };
}

<h2>Manage Users</h2>

<!-- Tabs -->
<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "PendingVerification" ? "active" : "")"
           asp-action="Index" asp-route-Status="PendingVerification">Pending Verification</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "Active" ? "active" : "")"
           asp-action="Index" asp-route-Status="Active">Active Users</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "Suspended" ? "active" : "")"
           asp-action="Index" asp-route-Status="Suspended">Suspended Users</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "Banned" ? "active" : "")"
           asp-action="Index" asp-route-Status="Banned">Banned Users</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "Rejected" ? "active" : "")"
           asp-action="Index" asp-route-Status="Rejected">Rejected Users</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "Inactive" ? "active" : "")"
           asp-action="Index" asp-route-Status="Inactive">Inactive Users</a>
    </li>
</ul>

<!-- Search -->
<form method="get" asp-action="Index" class="mb-3 row g-2">
    <div class="col-md-4">
        <input asp-for="SearchString" class="form-control" placeholder="Search by name, email, or ID" />
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-primary w-100">Search</button>
    </div>
</form>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<!-- Users Table -->
<table class="table table-striped">
    <thead>
        <tr>
            <th>Full Name</th>
            <th>Email</th>
            <th>Student ID Number</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            var allowedStatuses = transitions.ContainsKey(user.Status)
            ? transitions[user.Status]
            : Array.Empty<string>();

            <tr>
                <td>@user.FullName</td>
                <td>@user.Email</td>
                <td>@user.StudentIdNumber</td>
                <td>@user.Status</td>
                <td>
                    <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-info btn-sm">View</a>

                    <form asp-action="Verify" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@user.Id" />
                        @Html.AntiForgeryToken()

                        <select name="newStatus" class="form-select d-inline w-auto"
                                onchange="if(this.value) this.form.submit();">
                            <option value="">-- Select New Status --</option>
                            @foreach (var status in allowedStatuses)
                            {
                                <option value="@status">@status</option>
                            }
                        </select>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
